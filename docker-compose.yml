# (remova a linha "version", é obsoleta)

services:
  db:
    image: postgres:16
    container_name: es2-db
    environment:
      POSTGRES_DB: es2
      POSTGRES_USER: equipe4
      POSTGRES_PASSWORD: 1234
      # Opcional: fixe o timezone do servidor Postgres (ou deixe sem para UTC)
      # TZ: America/Sao_Paulo
    ports:
      # se tiver Postgres no host, troque para 15432:5432
      - "15432:5432"
    volumes:
      - es2_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-es2}"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: es2-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: es2-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-es2}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-equipe4}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-1234}

      # Evita o erro do Brazil/East; escolha UMA das linhas abaixo:
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: UTC
      # ou: SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: America/Sao_Paulo

      # Porta exposta pelo Spring (opcional se já está 8080 por padrão)
      SERVER_PORT: 8080
      # SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    # (opcional) healthcheck simples:
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health || exit 1"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 20s

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: es2-web
    depends_on:
      - api
    ports:
      - "80:80"

volumes:
  es2_data:
