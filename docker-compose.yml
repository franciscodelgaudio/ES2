services:
  db:
    image: postgres:16
    container_name: es2-db
    environment:
      POSTGRES_DB: es2
      POSTGRES_USER: equipe4
      POSTGRES_PASSWORD: 1234
    ports:
      - "15432:5432"
    volumes:
      - es2_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-es2}"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: es2-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: es2-keycloak
    command: ["start-dev"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: es2-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-es2}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-equipe4}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-1234}
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: UTC
      SERVER_PORT: 8081
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/es2
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started

  web:
    build:
      context: ./frontend
    container_name: es2-web
    depends_on:
      - api
    ports:
      - "80:80"

volumes:
  es2_data:
