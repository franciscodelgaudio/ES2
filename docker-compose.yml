services:
  db:
    image: postgres:16
    container_name: es2-db
    environment:
      POSTGRES_DB: es2
      POSTGRES_USER: equipe4
      POSTGRES_PASSWORD: 1234
      # Opcional: timezone do container do DB (n√£o resolve o erro do driver)
      # TZ: UTC
    ports: ["15432:5432"]
    volumes:
      - es2_data:/var/lib/postgresql/data
    healthcheck:
      # Dica: se quiser evitar a substitui√ß√£o por vari√°veis do host, fixa usu√°rio/db
      test: ["CMD-SHELL", "pg_isready -U equipe4 -d es2"]
      interval: 5s
      timeout: 3s
      retries: 20

  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0
    container_name: es2-keycloak
    command: ["start-dev", "--import-realm"]
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_PROXY: edge
      KC_SPI_THEME_CACHE_THEMES: "false"
      KC_SPI_THEME_CACHE_TEMPLATES: "false"
      # Opcional: s√≥ pra logs do container
      # TZ: America/Sao_Paulo
    ports: ["8080:8080"]
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/realm-es2.json:/opt/keycloak/data/import/es2.json:ro
      - ./keycloak/theme:/opt/keycloak/themes:ro

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: es2-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-es2}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-equipe4}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-1234}
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: UTC
      SERVER_PORT: 8081
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/es2/protocol/openid-connect/certs

      # üëá ADICIONE ESTAS DUAS LINHAS (resolve o "Brazil/East")
      TZ: America/Sao_Paulo
      JAVA_TOOL_OPTIONS: -Duser.timezone=America/Sao_Paulo
    ports: ["8081:8081"]
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started

  web:
    build:
      context: ./frontend
    container_name: es2-web
    depends_on: [api]
    ports: ["80:80"]

volumes:
  es2_data:
  keycloak_data:
