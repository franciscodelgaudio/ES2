name: CI/CD

on:
  push:
    branches: ["master"]   # dispara só quando der push na master
  pull_request:
  workflow_dispatch:       # botão "Run workflow" manual

jobs:
  # =======================
  # CI no runner do GitHub
  # =======================
  backend:
    name: Backend (Java + Maven)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'
          cache: maven

      - name: Build & Test
        run: mvn -B verify

  frontend:
    name: Frontend (Node + Angular)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint (optional)
        run: npm run lint --if-present

      - name: Run tests (headless no CI)
        run: npm test --if-present -- --watch=false --browsers=ChromeHeadless

      - name: Build production
        run: npm run build -- --configuration production

  docker-build:
    name: Docker build (API + Web)
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: es2-api:ci

      - name: Build Web image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: es2-web:ci

  # =======================
  # CD no runner self-hosted
  # =======================
  deploy:
    name: CD (Deploy via Docker Compose)
    runs-on: self-hosted
    needs: [docker-build]
    steps:
      - name: Deploy app
        run: |
          cd /home/delgaudio/Documentos/ES2
          docker compose -f docker-compose.prod.yml up -d --build --remove-orphans
