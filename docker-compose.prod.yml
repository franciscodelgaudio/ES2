version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: es2
      POSTGRES_USER: equipe4
      POSTGRES_PASSWORD: 1234
    volumes:
      - es2_data:/var/lib/postgresql/data
    healthcheck:
      # usa as variáveis do próprio container (ok)
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-equipe4} -d ${POSTGRES_DB:-es2}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./backend            # <- precisa conter pom.xml e Dockerfile
      dockerfile: Dockerfile
    image: es2-api:local
    restart: unless-stopped
    environment:
      DB_URL: jdbc:postgresql://db:5432/es2
      DB_USER: equipe4              # <- CASANDO com o serviço db
      DB_PASS: 1234                 # <- CASANDO com o serviço db
      SERVER_PORT: 8080
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  web:
    build:
      context: ./frontend           # <- precisa conter package.json e Dockerfile
      dockerfile: Dockerfile
    image: es2-web:local
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "80:80"

volumes:
  es2_data:
